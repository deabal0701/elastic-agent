# App config
server.port=8102
spring.application.name=elastic-agent

# Elastic Search 
spring.data.elasticsearch.cluster-nodes=49.247.150.72:9300
spring.data.elasticsearch.cluster-name=es-cluster-1
spring.elasticsearch.rest.uris=http://49.247.150.72:9200

# Kafka producer 설정
spring.kafka.bootstrap-servers=49.247.150.72:9092,49.247.150.72:9092,49.247.150.72:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


# Kafka consumer 설정
spring.kafka.consumer.bootstrap-servers=49.247.150.72:9092,49.247.150.72:9092,49.247.150.72:9092
spring.kafka.consumer.group-id=my-group
spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: com.dkitec.elastic.dto.GatewayLogDTODeserializer

# 로깅 레벨 설정
logging.level.root=WARN
logging.level.org.springframework=INFO
logging.level.com.example=DEBUG
logging.level.sun.rmi=ERROR
logging.level.javax.management=ERROR

# 로그 파일 이름 및 위치 설정
logging.file.name=gatewaylog.log
logging.file.path=logs

# 로그 파일 크기 제한 및 아카이브 설정
logging.file.max-size=10MB
logging.file.max-history=10
logging.file.total-size-cap=100MB

# 로그 패턴 설정
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{15} - %msg%n
